name: Protobuf CI
on:
  push:
    branches:
      - main
  merge_group:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]

permissions:
  contents: read
  pull-requests: write

env:
  BREAKING_REF: branch=main

jobs:
  buf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Define BREAKING_REF for merge_group
        if: github.event_name == 'merge_group'
        run: echo "BREAKING_REF=ref=${{ github.event.merge_group.base_sha }}" >> $GITHUB_ENV

      - name: Define BREAKING_REF for pull_request
        if: github.event_name == 'pull_request'
        run: echo "BREAKING_REF=ref=${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV

      - name: Define BREAKING_REF for main
        if: github.event_name == 'push'
        run: echo "BREAKING_REF=ref=${{ github.event.before }}" >> $GITHUB_ENV

      - name: Save initial state of proto-related files
        run: git status --porcelain crates > before.txt

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up rust cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install cargo-make
        run: cargo install --debug --locked cargo-make

      - uses: bufbuild/buf-action@v1
        with:
          token: ${{ secrets.BUF_TOKEN }}
          input: "proto"
          breaking_against: "${{ github.event.repository.clone_url }}#format=git,${{ env.BREAKING_REF }},subdir=proto"
          lint: true
          format: true
          breaking: true
          push: false

      - name: Generate protobuf sources
        run: cargo make generate-proto

      - name: Check for modifications
        run: |
          git status --porcelain crates > after.txt
          if ! diff before.txt after.txt > /dev/null; then
            echo "‚ùå Running 'cargo make generate-proto' modified some files! Ensure everything is committed."
            git diff crates
            exit 1
          fi
