name: Test - e2e

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"
  workflow_dispatch:
    branches:
      - "**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  CARGO_TERM_COLOR: always
  KURTOSIS_CDK_GIT_REF: v0.2.11

jobs:
  docker-build-local:
    name: E2E Tests | Docker build
    uses: ./.github/workflows/util:docker.yml
    secrets: inherit
    with:
      push: false
      local-artifact-name: "docker-image"
      local-artifact-dir: "/tmp"

  e2e-kurtosis-cdk:
    name: E2E Tests | Kurtosis-CDK
    runs-on: ubuntu-latest
    needs:
      - docker-build-local
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: "docker-image"
          path: "/tmp"

      - name: Load image
        run: |
          echo ${{ needs.docker-build-local.outputs.tags }}
          docker load --input /tmp/docker-image.tar
          docker image ls -a

      - name: Checkout kurtosis-cdk
        uses: actions/checkout@v4
        with:
          repository: 0xpolygon/kurtosis-cdk
          ref: ${{ env.KURTOSIS_CDK_GIT_REF }}

      - name: Replace param with local agglayer-rs docker img
        run: |
          new_value="${{ needs.docker-build-local.outputs.tags }}"

          # Escape special characters in the new value
          escaped_new_value=$(sed 's/[\/&]/\\&/g' <<< "$new_value")

          sed -i "s/zkevm_agglayer_image: .*/zkevm_agglayer_image: $escaped_new_value/" "params.yml"

          # Debug
          cat params.yml

      - name: Install kurtosis
        run: |
          echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
          sudo apt update
          sudo apt install kurtosis-cli=1.3.1
          kurtosis analytics disable

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run kurtosis
        run: kurtosis run --enclave cdk-v1 --args-file params.yml --image-download always .

      - name: Expose RPC URL
        run: echo "ETH_RPC_URL=$(kurtosis port print cdk-v1 cdk-erigon-node-001 http-rpc)" >> $GITHUB_ENV

      - name: Check that batches are progressing
        continue-on-error: true
        env:
          ETH_RPC_URL: ${{ env.ETH_RPC_URL }}
          TIMEOUT_SECONDS: 900
        run: ./.github/scripts/monitor-verified-batches.sh --rpc-url "$ETH_RPC_URL"

      - name: debug
        run: kurtosis service logs cdk-v1 agglayer

  pushing-docker-image:
    name: Docker | Publish image to registry
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || ( github.event_name == 'workflow_dispatch' )
    permissions:
      packages: write
    needs:
      - docker-build-local
      - e2e-kurtosis-cdk
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: "docker-image"
          path: "/tmp"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Load image
        run: |
          echo ${{ needs.docker-build-local.outputs.tags }}
          docker load --input /tmp/docker-image.tar

      - name: Publishing image
        env:
          DOCKER_IMAGE: ${{ needs.docker-build-local.outputs.tags }}
        run: docker push ${{ env.DOCKER_IMAGE }}
