name: Util | Docker

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}  

on:
  workflow_call:
    inputs:
      push:
        description: "Push the docker image to the registry"
        default: false
        type: boolean
      local-artifact-name:
        description: "Name of the artifact used for local builds only"
        default: "docker-image"
        type: string
      local-artifact-dir:
        description: "Directory of the artifact used for local builds only"
        default: "/tmp"
        type: string
    outputs:
      tags:
        description: "Docker tags"
        value: ${{ jobs.docker.outputs.tags }}

jobs:
  docker:
    name: Build${{ inputs.push == true && '-Push' || '' }}
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build${{ inputs.push == true && '-Push' || '' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          # platforms: linux/amd64,linux/arm64
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: ${{ inputs.push == true && 'type=image' || format('type=docker,dest={0}/{1}.tar', inputs.local-artifact-dir, inputs.local-artifact-name) }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload artifact
        if: inputs.push == false
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.local-artifact-name }}
          path: ${{ inputs.local-artifact-dir }}/${{ inputs.local-artifact-name }}.tar
