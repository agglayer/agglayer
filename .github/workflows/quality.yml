name: Quality

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"
  merge_group:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_id || github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  readme:
    name: Readme - checking readme compatibility
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Install cargo readme
        run: cargo install cargo-readme

      - name: checking readme
        run: ./scripts/quality/check_readme.sh

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy

      - name: Set up rust cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - uses: taiki-e/install-action@protoc

      - name: Install cargo-make
        run: cargo install --debug --locked cargo-make

      - name: Run clippy
        run: cargo make ci-clippy

  fmt:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Set up rust cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install cargo-make
        run: cargo install --debug --locked cargo-make

      - name: Run format
        run: cargo make ci-format
